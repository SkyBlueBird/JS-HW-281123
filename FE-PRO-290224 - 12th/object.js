//  Домашня робота 12
// Форма з вибором улюбленого кольору:
// Створіть форму з декількома радіокнопками, кожна з яких представляє різний колір (наприклад, червоний, зелений, синій).
// Використовуйте подію onchange для кожної радіокнопки, щоб змінювати колір фону сторінки відповідно до вибору користувача.

window.onload = function(){

const checkboxes = document.querySelectorAll('input[type="checkbox"]');

checkboxes.forEach(checkbox => {
  checkbox.addEventListener('change', function() {
    checkboxes.forEach(cb => {
      if (cb !== this) {
        cb.checked = false;
      }
    });

    if (this.checked) {
      document.body.style.backgroundColor = this.value;
    } else {
      document.body.style.backgroundColor = '';
    }
  });
});

};

// Форма для вибору хобі з чекбоксами:
// Створіть чекбокси для різних хобі (наприклад, читання, спорт, музика).
// Встановіть обробник події onchange для кожного чекбоксу, щоб відображати список вибраних хобі у текстовому елементі під формою.

window.onload = function(){
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    const selectedHobbies = document.getElementById('selectedHobbies');

    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        const selected = Array.from(checkboxes).filter(cb => cb.checked).map(cb => cb.value);
        selectedHobbies.textContent = 'Selected hobbies: ' + selected.join(', ');
      });
    });
};

// Форма з вибором країни із випадаючого списку:
// Створіть випадаючий список з назвами країн.
// Використовуйте подію onchange для випадаючого списку, щоб виводити інформацію про вибрану країну, таку як столиця або населення, в іншому елементі на сторінці.
// Форма для оцінювання якості обслуговування:

window.onload = function() {
    const countrySelect = document.getElementById('countries');
    const countryInfo = document.getElementById('countryInfo');

    countrySelect.addEventListener('change', function() {
      const selectedCountry = countrySelect.value;
      let info = '';

      switch(selectedCountry) {
        case 'USA':
          info = 'Capital: Washington, D.C., Population: 331 million';
          break;
        case 'UK':
          info = 'Capital: London, Population: 66 million';
          break;
        case 'France':
          info = 'Capital: Paris, Population: 67 million';
          break;
        case 'Germany':
          info = 'Capital: Berlin, Population: 83 million';
          break;
        case 'Japan':
          info = 'Capital: Tokyo, Population: 126 million';
          break;
        default:
          info = 'Please select a country';
      }

      countryInfo.textContent = info;
    });
}



//     Домашня робота 11

// Додаткова робота:
// -Реалізуйте в todo  списку створеному на уроці кнопку видалення
// - реалізуйте сортування за імям ( створіть поле вводу ) і при вводі тексту залишайте тільки ті айтеми туду 
// що мають такеж значення щой в полі пошуку.

// Видалення усіх вказаних елементів з масиву
// Завдання: Напишіть функцію, яка приймає масив та елемент, який потрібно видалити з масиву. 
// Функція повинна повертати новий масив без елементів, що були вказані для видалення.

// Напишіть функцію, яка приймає два масиви і повертає новий масив, що містить унікальні 
// елементи з обох масивів (тобто без дублікатів).

// Напишіть функцію, яка приймає масив чисел і повертає об'єкт з двома масивами: перший 
// масив містить парні числа, а другий — непарні.





// Домашня робота 10 (борг)


// v2
// Комбіноване завдання 'keydown' і 'keyup' для створення інтерактивного меню: Коли користувач натискає певну клавішу М, 
// з'являється  меню ul елемент в якому 3 li, і зробити можливість  переміщатися по пунктах меню, використовуючи клавіші 
// вгору/вниз змінюючи бекграунд. При натиску клавіші С меню зникає.

// Додаткова робота:
// event.target   
// Створіть блок з классом blockContainer з 3 кнопками,  в кожної з яких унікальний клас button.first, button.second, button.third.
// Додайте обробник кліка на blockContainer і при кліку на кнопку виводьте alert в якому повідомляйте яка кнопка отримала клік

// 'onMouseDown' і 'onMouseUp': Реалізуйте просту гру "Перетягування": створіть об'єкт, який можна перетягувати в межах певної 
// області, використовуючи події натискання та відпускання кнопки миші.





//            д/з 8                                   Я не зрозуміла це завдання: 
//  const menuData = [
//     { name: 'Головна', url: '/' },
//     { name: 'Про нас', url: '/about' },
//     { name: 'Послуги', url: '/services' },
//     // Додайте ще пункти меню за потреби
// ];
// 3)Створіть в хедері з попереднього завдання А теги з значенням з обєкта name  встановленим значенням в href з url.


// дз 8 додаткові:

// 4)Створіть блок за допомогою js задайте блоку стиль display flex та в середині цього блоку створіть 50 div блоків з правилом border-radius, width 50px height 50px та background-color



// Створіть блок контейнер в html та перебераючи масив за допомогою js створіть елемент Р в залежності від usePrepend розмість його перед контейнером або за контейнером 
// const elementsArray = [
//     { text: 'Елемент 1', usePrepend: true },
//     { text: 'Елемент 2', usePrepend: false },
//     { text: 'Елемент 3', usePrepend: true }
// ]

// спробуйте зробити  завдання 4 так щоб в кожного div елемента був унікальний бекграунд



//   це мої борги:

// Додаткова робота:
// Визначення Частоти Слова у Рядку
// Створіть функцію, яка приймає рядок та слово, і повертає кількість разів, скільки це слово зустрічається у рядку.

// Заміна Першої Букви Кожного Слова на Велику
// Розробіть функцію, яка перетворює першу букву кожного слова у рядку на велику, залишаючи решту букв маленькими.


// 4 Задачі для практики forEach, reverse  Виведіть значення з масиву в зворотньому порядку
// const numbers = [1, 2, 3, 4, 5];

// 5  Задачі для практики map та Math.round
//  Маєте масив чисел з плаваючою комою. Використовуйте map разом з Math.round, щоб створити новий масив, в якому кожне число буде округлене до найближчого цілого.

// Додаткове завдання:
// 1. Вгадай число
// Гравець має вгадати число, яке програма випадково генерує в заданому діапазоні від 1до 20. Після кожної спроби програма повідомляє, чи є загадане число більшим чи меншим від введеного. Гра триває до вгадування числа 

// 2. Камінь-ножиці-папір
// Гравець вводить свій вибір, а програма генерує власний випадковим чином. Потім визначається переможець за традиційними правилами гри.
// Додаткові матеріали 



// Напишіть функцію, яка використовує forEach для обчислення суми всіх елементів у масиві чисел. Масив наприклад const numberArr = [10,20,30]

// Додаткове завдання:
// Напишіть функцію, яка використовує forEach для створення масиву, що містить лише унікальні елементи вихідного масиву.


// Напишіть функцію, що приймає масив чисел і колбек-функцію. Функція повинна використовувати for...of для обходу по масиву та
// викликати колбек-функцію для кожного елемента. Колбек-функція повинна повертати true або false, вказуючи, чи слід включити поточний елемент до нового масиву.


// Передавши масив  [1, 2, 3, 4, 5] і колбек-функція, що відбирає парні числа.