//     Домашня робота 11

// Завдання 1: Конвертер валют
// Мета: Створити простий конвертер валют, який перетворює введені користувачем гроші з однієї валюти в іншу.

// Інструкції:
// 1)Створіть два поля введення: одне для суми, друге для курсу обміну.
// Додайте кнопку, яка виконає конвертацію при її натисканні.
// При натисканні кнопки, зчитайте значення з обох полів і виконайте конвертацію.
// Виведіть результат конвертації на сторінку.

function convertCurrency() {
    const amount = parseFloat(document.getElementById('amount').value);
    const exchangeRate = parseFloat(document.getElementById('exchangeRate').value);

    if (!isNaN(amount) && !isNaN(exchangeRate)) {
        const result = amount * exchangeRate;
        document.getElementById('currencyResult').innerText = `Результат конвертації: ${result} грн`;
    } else {
        document.getElementById('currencyResult').innerText = 'Будь ласка, введіть коректні значення.';
    }
}
// 2) Створіть слайдер ( зображення що міняє картинку ) кожні 3 секунди,  коли курсор наведено на зображення 
// слайдер зупиняється, коли покидає зображення розпочинає роботу

window.onload = function() {
    let sliderInterval;       

        function startSlider() {
            sliderInterval = setInterval(() => {
                const slider = document.getElementById('imageSlider');
                const currentTransform = window.getComputedStyle(slider).getPropertyValue('transform');
                const matrix = new DOMMatrix(currentTransform); //  це об'єкт у JavaScript, який представляє 4x4 матрицю для трансформацій, таких як зсув, обертання, 
                                                               // масштабування тощо. У даному випадку використовується для того, щоб отримати значення 
                                                               // трансформації з поточного стану слайдера
                const currentTranslateX = matrix.m41;

                slider.style.transform = `translateX(${currentTranslateX - 300}px)`;
            }, 3000);
        }

        function stopSlider() {
            clearInterval(sliderInterval);
        }

        startSlider(); // Запускаємо слайдер при завантаженні сторінки
}

// Додаткова робота:
// -Реалізуйте в todo  списку створеному на уроці кнопку видалення
// - реалізуйте сортування за імям ( створіть поле вводу ) і при вводі тексту залишайте тільки ті айтеми туду 
// що мають такеж значення щой в полі пошуку.

// Видалення усіх вказаних елементів з масиву
// Завдання: Напишіть функцію, яка приймає масив та елемент, який потрібно видалити з масиву. 
// Функція повинна повертати новий масив без елементів, що були вказані для видалення.

// Напишіть функцію, яка приймає два масиви і повертає новий масив, що містить унікальні 
// елементи з обох масивів (тобто без дублікатів).

// Напишіть функцію, яка приймає масив чисел і повертає об'єкт з двома масивами: перший 
// масив містить парні числа, а другий — непарні.





// Домашня робота 10 (борг)


// v2
// Комбіноване завдання 'keydown' і 'keyup' для створення інтерактивного меню: Коли користувач натискає певну клавішу М, 
// з'являється  меню ul елемент в якому 3 li, і зробити можливість  переміщатися по пунктах меню, використовуючи клавіші 
// вгору/вниз змінюючи бекграунд. При натиску клавіші С меню зникає.

// Додаткова робота:
// event.target   
// Створіть блок з классом blockContainer з 3 кнопками,  в кожної з яких унікальний клас button.first, button.second, button.third.
// Додайте обробник кліка на blockContainer і при кліку на кнопку виводьте alert в якому повідомляйте яка кнопка отримала клік

// 'onMouseDown' і 'onMouseUp': Реалізуйте просту гру "Перетягування": створіть об'єкт, який можна перетягувати в межах певної 
// області, використовуючи події натискання та відпускання кнопки миші.





//            д/з 8                                   Я не зрозуміла це завдання: 
//  const menuData = [
//     { name: 'Головна', url: '/' },
//     { name: 'Про нас', url: '/about' },
//     { name: 'Послуги', url: '/services' },
//     // Додайте ще пункти меню за потреби
// ];
// 3)Створіть в хедері з попереднього завдання А теги з значенням з обєкта name  встановленим значенням в href з url.


// дз 8 додаткові:

// 4)Створіть блок за допомогою js задайте блоку стиль display flex та в середині цього блоку створіть 50 div блоків з правилом border-radius, width 50px height 50px та background-color



// Створіть блок контейнер в html та перебераючи масив за допомогою js створіть елемент Р в залежності від usePrepend розмість його перед контейнером або за контейнером 
// const elementsArray = [
//     { text: 'Елемент 1', usePrepend: true },
//     { text: 'Елемент 2', usePrepend: false },
//     { text: 'Елемент 3', usePrepend: true }
// ]

// спробуйте зробити  завдання 4 так щоб в кожного div елемента був унікальний бекграунд



//   це мої борги:

// Додаткова робота:
// Визначення Частоти Слова у Рядку
// Створіть функцію, яка приймає рядок та слово, і повертає кількість разів, скільки це слово зустрічається у рядку.

// Заміна Першої Букви Кожного Слова на Велику
// Розробіть функцію, яка перетворює першу букву кожного слова у рядку на велику, залишаючи решту букв маленькими.


// 4 Задачі для практики forEach, reverse  Виведіть значення з масиву в зворотньому порядку
// const numbers = [1, 2, 3, 4, 5];

// 5  Задачі для практики map та Math.round
//  Маєте масив чисел з плаваючою комою. Використовуйте map разом з Math.round, щоб створити новий масив, в якому кожне число буде округлене до найближчого цілого.

// Додаткове завдання:
// 1. Вгадай число
// Гравець має вгадати число, яке програма випадково генерує в заданому діапазоні від 1до 20. Після кожної спроби програма повідомляє, чи є загадане число більшим чи меншим від введеного. Гра триває до вгадування числа 

// 2. Камінь-ножиці-папір
// Гравець вводить свій вибір, а програма генерує власний випадковим чином. Потім визначається переможець за традиційними правилами гри.
// Додаткові матеріали 



// Напишіть функцію, яка використовує forEach для обчислення суми всіх елементів у масиві чисел. Масив наприклад const numberArr = [10,20,30]

// Додаткове завдання:
// Напишіть функцію, яка використовує forEach для створення масиву, що містить лише унікальні елементи вихідного масиву.


// Напишіть функцію, що приймає масив чисел і колбек-функцію. Функція повинна використовувати for...of для обходу по масиву та
// викликати колбек-функцію для кожного елемента. Колбек-функція повинна повертати true або false, вказуючи, чи слід включити поточний елемент до нового масиву.


// Передавши масив  [1, 2, 3, 4, 5] і колбек-функція, що відбирає парні числа.